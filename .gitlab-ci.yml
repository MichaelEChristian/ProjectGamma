stages:
 - test # run tests and check for code quality
 - build # run build e.g. npm install and start, etc. after tests
 - deploy # run deploy after build finishes

services:
 - postgres:14.2-bullseye

 variables:
  POSTGRES_PASSWORD: bossmode
  DARABASE_URL: postgresql://bossmode:bossmode@postgres:5432/accounts
  SECRET_KEY: db0a49ab25db171089e1a3950f31f3288df643c7c33ede3f38d6bf7788569e24

build-job:
  stage: build
  script:
    - echo "Hello, $GITLAB_USER_LOGIN!

backend-accounts-unit-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - cd backend/accounts/api
    - pip install -r requirements.txt
    - python m pytest

lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 backend
    - flake8 data
    - flake8 frontend

# test-job2: someone else write scripts for their tests wherever they are located e.g. destinations
#   stage: test
#   script:
#     - echo "This job tests something, but takes more time than test-job1."
#     - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
#     - echo "which simulates a test that runs 20 seconds longer than test-job1"
#     - sleep 20

build-front-end-job:
  rules:
    -if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  stage: build
  image: node:lts-bullseye
  needs:
    - lint-test-job
    - backend-accounts-unit-test-job
    # - any other tests that need to past
  script:
    - cd frontend/ghi
    # - npm install -D tailwindcss
    - npm install --legacy-peer-deps --save
    - npm run build

artifacts:
  paths:
    - frontend/ghi/build

deploy-prod:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  environment: production
